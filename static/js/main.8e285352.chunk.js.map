{"version":3,"sources":["NN.jsx","FLOSS.jsx","ABOUT.jsx","App.js","serviceWorker.js","index.js"],"names":["NN","blueColor","redColor","greenColor","render","className","contentStyle","background","color","boxShadow","contentArrowStyle","borderRight","date","iconStyle","icon","style","maxWidth","src","process","justifyContent","display","alignItems","Paper","variant","width","margin","Typography","fontWeight","fontFamily","m","Component","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","FLOSS","classes","Grid","container","paddingTop","paddingBottom","item","xs","sm","ExpansionPanel","backgroundColor","ExpansionPanelSummary","expandIcon","aria-controls","id","heading","ExpansionPanelDetails","target","href","ABOUT","TabPanel","props","children","value","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","palette","SimpleTabs","React","useState","setValue","AppBar","position","Tabs","onChange","event","newValue","marginTop","aria-label","centered","Tab","label","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8e285352.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\nimport {Paper, Typography} from '@material-ui/core';\n\nclass NN extends Component {\n\n    blueColor='rgb(42,55,122)'\n    redColor= 'rgb(233, 30, 99)'\n    greenColor='rgb(16, 204, 82)'\n\n    render = () => {\n        return (<div className=\"NN\">\n\n            <VerticalTimeline>\n                <VerticalTimelineElement\n                    className=\"vertical-timeline-element--work\"\n                    contentStyle={{ background: this.blueColor , color: '#fff',boxShadow:'none'}}\n                    contentArrowStyle={{ borderRight: `7px solid  ${this.blueColor}` }}\n                    date=\"1969\"\n                    iconStyle={{ background: this.blueColor, color: '#fff' }}\n                    icon={<img/>}\n                >\n                    <h3 className=\"vertical-timeline-element-title\">Birth of the Internet</h3>\n                    {/* <h4 className=\"vertical-timeline-element-subtitle\">Miami, FL</h4> */}\n                    <p>Throughout all of the 1960's, people were working on developing some sort of data and computer networking. \n                        It culminated in 1969 when ARPANET carries the first packets over the network.</p>\n                </VerticalTimelineElement>\n                <VerticalTimelineElement\n                    className=\"vertical-timeline-element--work\"\n                    contentStyle={{ background: this.blueColor , color: '#fff',boxShadow:'none'}}\n                    contentArrowStyle={{ borderRight: `7px solid  ${this.blueColor}` }}\n                    date=\"1978-1980\"\n                    iconStyle={{ background: this.blueColor, color: '#fff' }}\n                    icon={<img/>}\n                >\n                    <h3 className=\"vertical-timeline-element-title\">Internet Protocols Evolve</h3>\n                    {/* <h4 className=\"vertical-timeline-element-subtitle\">San Francisco, CA</h4> */}\n                    <p>\n                    The TCP/IP was finalized in 1978. UDP/IP is another common system for more sustained connections founded in 1980. UDP/IP is more useful for more sustained uninterrupted connections as opposed to the more quick bursts of data transfer that TCP/IP is more known for. These protocols are still commonplace to this day.\n                    </p>\n                </VerticalTimelineElement>\n                <VerticalTimelineElement\n                    className=\"vertical-timeline-element--work\"\n                    contentStyle={{ background: this.blueColor , color: '#fff' ,boxShadow:'none'}}\n                    contentArrowStyle={{ borderRight: `7px solid  ${this.blueColor}` }}\n                    date=\"1995\"\n                    iconStyle={{ background: this.blueColor, color: '#fff' }}\n                    icon={<img/>}\n                >\n                    <h3 className=\"vertical-timeline-element-title\">New Internet Architecture</h3>\n                    {/* <h4 className=\"vertical-timeline-element-subtitle\">San Francisco, CA</h4> */}\n                    <p>\n                   Internet infrastructure model of users connecting to the Internet through an Internet Service Provider or ISP. \n                   Those ISP's then in turn connect to each other through Network Access Points or NAPs.\n                   Here is a diagram on early NAPs:\n                   <img style={{maxWidth:\"100%\"}} src={process.env.PUBLIC_URL + '/NewNSFNETArchitecture.jpg'} /> \n                    </p>\n                </VerticalTimelineElement>\n\n                <VerticalTimelineElement\n                    className=\"vertical-timeline-element--education\"\n                    contentStyle={{ background: this.blueColor , color: '#fff',boxShadow:'none' }}\n                    contentArrowStyle={{ borderRight: `7px solid  ${this.blueColor}` }}\n                    date=\"early 2000's\"\n                    iconStyle={{ background: this.blueColor, color: '#fff' }}\n                    icon={<img/>}\n                >\n                    <h3 className=\"vertical-timeline-element-title\">Start of ISP Issues</h3>\n                    {/* <h4 className=\"vertical-timeline-element-subtitle\">Online Course</h4> */}\n                    <p>\n                    ISP's start controlling what people are able to do with their connections.\n                    They are prohibiting users from configuring their Wi-Fi routers.\n                    Some were also prohibiting users from accessing Virtual Private Networks (VPNs) which are used to allow for secure and anonymous connections.   \n                    </p>\n                </VerticalTimelineElement>\n\n                <VerticalTimelineElement\n                    className=\"vertical-timeline-element--education\"\n                    contentStyle={{ background: this.redColor , color: '#fff',boxShadow:'none' }}\n                    contentArrowStyle={{ borderRight: `7px solid  ${this.redColor}` }}\n                    date=\"2003\"\n                    iconStyle={{ background: this.redColor, color: '#fff' }}\n                    icon={<img/>}\n                >\n                    <h3 className=\"vertical-timeline-element-title\">Network Neutrality is Born</h3>\n                    {/* <h4 className=\"vertical-timeline-element-subtitle\">Bachelor Degree</h4> */}\n                    <p>\n                    Columbia University law professor Tim Wu coined the term \"network neutrality\" in a paper about online discrimination.  Wu worried that ISPs' tendency to restrict new technologies would hurt innovation in the long term, and called for anti-discrimination rules.\n                    </p>\n                </VerticalTimelineElement>\n\n                <VerticalTimelineElement\n                    className=\"vertical-timeline-element--education\"\n                    contentStyle={{ background: this.redColor , color: '#fff',boxShadow:'none' }}\n                    contentArrowStyle={{ borderRight: `7px solid  ${this.redColor}` }}\n                    date=\"2005-2008\"\n                    iconStyle={{ background: this.redColor, color: '#fff' }}\n                    icon={<img/>}\n                >\n                    <h3 className=\"vertical-timeline-element-title\">FCC Blunders Anti-Discrimintion Policy</h3>\n                    {/* <h4 className=\"vertical-timeline-element-subtitle\">Bachelor Degree</h4> */}\n                    <p>\n                    In 2005, the FCC was able to sneak in some anti-discrimination rules in a policy. It prevented blocking legal content or blocking connections from certain types of devices. The FCC ordered Comcast to stop slowing all connections that were used by BitTorrent. Comcast then sued the FCC and won saying the 2005 rules didn't give them enough power.\n                    </p>\n                </VerticalTimelineElement>\n\n                <VerticalTimelineElement\n                    className=\"vertical-timeline-element--education\"\n                    contentStyle={{ background: this.redColor , color: '#fff',boxShadow:'none' }}\n                    contentArrowStyle={{ borderRight: `7px solid  ${this.redColor}` }}\n                    date=\"2014-2015\"\n                    iconStyle={{ background: this.redColor, color: '#fff' }}\n                    icon={<img/>}\n                >\n                    <h3 className=\"vertical-timeline-element-title\">FCC and the Fast Lanes</h3>\n                    {/* <h4 className=\"vertical-timeline-element-subtitle\">Bachelor Degree</h4> */}\n                    <p>\n                    In 2014, the FCC proposed a new proposal that would allow for internet \"fast lanes\" where ISPs would be allowed to certain services faster connection speeds than others and discriminate between customers as well. \n                    Through major push back lead by John Oliver of <i>Last Week Tonight</i>, the proposal became much more like theoretical net neutrality. \n                    These rules got passed, and everyone was happy.\n                    </p>\n                </VerticalTimelineElement>\n                <VerticalTimelineElement\n                    className=\"vertical-timeline-element--education\"\n                    contentStyle={{ background: this.redColor , color: '#fff',boxShadow:'none'}}\n                    contentArrowStyle={{ borderRight: `7px solid  ${this.redColor}` }}\n                    date=\"2017\"\n                    iconStyle={{ background: this.redColor, color: '#fff' }}\n                    icon={<img/>}\n                >\n                    <h3 className=\"vertical-timeline-element-title\">FCC Changeup: the Rise of Ajit Pai </h3>\n                    {/* <h4 className=\"vertical-timeline-element-subtitle\">Bachelor Degree</h4> */}\n                    <p>\n                    With the results of the 2016 Election, President Trump appointed Ajit Pai as the new FCC Chair. \n                    Almost immediately unveiling a plan to undo the 2015 changes. \n                    In December 2017, a vote repealed all of the 2015 changes.\n                    This has faced public outcry and a number of legal groups are fighting to reobtain net neutrality.\n                    </p>\n                </VerticalTimelineElement>\n                <VerticalTimelineElement\n                    iconStyle={{ background: this.greenColor, color: '#fff', justifyContent: 'center',display:'flex',alignItems:'center'}}\n                    icon={<h4>NOW</h4>}\n                />\n\n            </VerticalTimeline>\n            <Paper variant=\"outlined\" style={{ background: this.greenColor, color: '#fff', width: '50%', margin:'auto'}}>\n                <Typography fontWeight=\"fontWeightBold\" fontFamily=\"Monospace\" m={1}>\n                    With the modern conditions of Covid-19, it's even more apparent than ever that we need unbiased nondiscriminatory internet access across the nation. \n                    The number of people, with no access to their work or education or family due to limited internet connections.\n                    Many people have relied on public areas like libraries or McDonald's to be able to access the internet.\n                    Just imagine ISPs slowing down connections to their competitors or throttling connections to companies or schools because they can.\n                    It's a terrible world, and we have an increasingly large list of issues in which to stay vigilant.  \n                </Typography>\n            </Paper>\n        </div>)\n    }\n}\n\nexport default NN","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        color: 'white'\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: 'white',\n    }\n}));\n\nexport default function FLOSS() {\n    const classes = useStyles();\n    let blueColor = 'rgb(42,55,122)'\n\n\n    return (\n        <div className={classes.root}>\n            <Paper variant=\"outlined\" style={{ background: blueColor, color: '#fff', textAlign: 'justify' }}>\n                <Typography>\n                    The concept of Free and Open Source software is a long standing one. At it's core, it is the combination of two key attributes of software.\n                    Software that Free is one that gives the user control.\n                    They are free to do with it that you will.\n                    Open Source software has its source code exposed.\n                    People have the ability see what the programs are doing and can help improve it.\n                    The combination of the two suggests that we should be developing software that anyone can use however they please and that we are developing it a manner that allows people to see the source and help make it better.\n                    A key point that I want to actively iterate is that free is not monetarily free.\n                    I can spend money on FOSS if I am then allowed to fully configure and manipulate it.\n                    It is relatively common though in this realm that people also create things that financially free as well.\n                    Due to this people often refer to the concept as Free/Libre and Open Source Software to help emphasize this distinction.\n                    The following will talk about some popular projects and companies at the cross product of these individual concepts.\n                    </Typography>\n            </Paper>\n\n            <Grid container spacing={3} style={{ paddingTop: '50px', paddingBottom: '50px', color:'white'}}>\n\n                <Grid item xs={12} sm={6} >\n                    <ExpansionPanel style={{color: 'white' , backgroundColor:'rgb(24,26,27)'}}>\n                        <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon style={{color:'white'}} />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                        >\n                            <Typography className={classes.heading}>Not Free And Closed Source</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Typography>\n                                The majority of software falls in this category.\n                                Another term that describes Not Free and Closed Software is proprietary software.\n                                The Microsoft Office Suite, well almost everything put out by Microsoft, is completely proprietary.\n                                You don't have the ability to see any source code for the products.\n                                You also have limited ability to edit software through their licensing.\n                                The Adobe Creative Suite is very similar.\n                                Photoshop and Premiere do not have any source code associated with them.\n                                Many device drivers which allow your computer to interface with specific physical components are proprietary.\n                                This conversation can easily extend to hardware which is made proprietary through its software's distribution.\n                                One notable example currently is popular video game company Riot Games' new release <i> Valorant</i> has its anti-cheat program installed at the kernel level.\n                                This is very troublesome.\n                                We have no idea what Riot Games could be doing with this kernel access.\n                                It could be hiding Spyware to monitor user's machines and habits outside of the game.\n                                Due to its proprietary nature we have no idea.\n                            </Typography>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <ExpansionPanel style={{color: 'white' , backgroundColor:'rgb(24,26,27)'}}>\n                        <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon  style={{color: 'white'}}/>}\n                            aria-controls=\"panel2a-content\"\n                            id=\"panel2a-header\"\n                        >\n                            <Typography className={classes.heading}>Free And Closed Source</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Typography>\n                                Most examples fall in the extremes of proprietary or FOSS.\n                                However, there are many things that fall in the grey.\n                                One example would be Adobe Acrobat Reader.\n                                There's no public source code.\n                                Despite this, Adobe's license for this program is very open for what you're allowed to do with it as a user.\n                                Modding Video Games is also a very common example of free, but closed source software experiences.\n                                The source code for games like <i>Minecraft</i> or <i>Skyrim</i> are not available.\n                                However, the developers expose certain aspects of the game to external modders to completely bend the experience to their will.\n                                This allows for users to have complete freedom to manipulate their software, but they not have complete access to its source so achieving many of these goals can become much more difficult.\n                                Popular fighting game <i>Street Fighter V</i> had issues with its Netcode (protocols for managing online multiplayer connections) for years.\n                                Within the past year, a fan created a mod for the game greatly improving the online performance for players.\n                                In a recent patch to the game, the developers at Capcom used a similar strategy to improve this issue that was never touched in any update previous to this fan's mod.\n                                So many of the examples in this category lead to companies getting an improved product through users' efforts to make their software better.\n                            </Typography>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <ExpansionPanel style={{color: 'white' , backgroundColor:'rgb(24,26,27)'}}>\n                        <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon style={{color: 'white' }} />}\n                            aria-controls=\"panel2a-content\"\n                            id=\"panel2a-header\"\n                        >\n                            <Typography className={classes.heading}>Not Free And Open Source</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Typography>\n                                Microsoft Visual Studio Code (VS Code) is a wonderful example of a company trying Open Source with one of its projects.\n                                This is a lightweight IDE developed by Microsoft that has become one of the most popular development tools since the project's inception in 2015.\n                                You can find that code on Github <a target=\"blank\" href=\"https://github.com/Microsoft/vscode\">here</a>.\n                                Despite being open source parts of its compilation prior to release is run through Microsoft proprietary compilers.\n                                However, you can compile the source code yourself there might just be certain features missing.\n                                There is an extension marketplace of free add-ons to VS Code.\n                                Many of which are also Open Source projects.\n                                It is so amazing as Microsoft is known for some the most egregious acts of proprietary software, but has also launched this endeavor which has become one of the defacto standards of coding development, especially web based development.\n                                Google Chrome also fits in this weird category as some of its source code is available, but there is a lot of code not publicly available.\n          </Typography>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <ExpansionPanel style={{color: 'white' , backgroundColor:'rgb(24,26,27)'}}>\n                        <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon  style={{color: 'white'}}/>}\n                            aria-controls=\"panel2a-content\"\n                            id=\"panel2a-header\"\n                        >\n                            <Typography className={classes.heading}>Free And Open Source</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Typography>\n                                I can talk the most about this combination.\n                                This movement was spearheaded by the work of Richard Stallman and Linus Torvalds.\n                                Stallman with the GNU Project which helped define licenses for Open Source Projects and categorize other established software licenses.\n                                The  most recent version of the GNU General Public License can be found <a target=\"blank\" href=\"https://www.gnu.org/licenses/gpl-3.0.en.html\" >here</a>.\n                                Torvalds revolutionized the game when he developed Linux in 1991.\n                                Linux is an open source which at the time was a revolutionary concept.\n                                Torvalds was growing Linux through open source collaboration.\n                                He and his team were using a proprietary source control system called BitKeeper, and getting all of the licenses for collaborators was getting out of hand.\n                                They realized they needed an open source solution.\n                                3 April 2005 development of Git began, and on the 29th they achieved their goals.\n                                Git has since become the defacto source control tool.\n                                It existence has allowed for Open Source to flourish due to the ability for anyone to collaborate on any project.\n                                There are so many fantastic Free and Open Source projects and it can all be traced back to the contributions of these men and their respective teams.\n\n          </Typography>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                </Grid>\n            </Grid>\n            <Paper variant=\"outlined\" style={{ background: blueColor, color: '#fff', textAlign: 'justify' }}>\n                <Typography>\n                    One very cool tool developed by the fine people at Github is the <a href=\"https://choosealicense.com/\" target=\"blank\">Chose A License website</a>.\n                    It is a sort of chose your own adventure questionnaire to determine what license you should use on your code to get the exact usage you want out of your code. \n                    One of the biggest hassles with the Free and Open Source Movement is the slight nuances between of the licenses that people use on their code.\n            </Typography>\n            </Paper>\n        </div>\n    );\n}","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\n\nclass ABOUT extends Component {\n\n    render = () => {\n        return (<div className=\"ABOUT\" style={{ color: '#fff' }}><Typography>\n            This is a project by Troy Wiegand for GHS 210 Freedom And Movement. Below are included sources:\n            </Typography>\n            <ul>\n                <li>Adobe. Adobe Acrobat Reader DC FAQs. December 2019. https://helpx.adobe.com/reader/faq.html</li>\n                <li>Ale2610. ComputerCraft Icon v2. 2015. favicon.cc, https://www.favicon.cc/?action=icon&file_id=799726</li>\n                <li>Finley, Klint. The WIRED Guide to Net Neutrality. May 2018. https://www.wired.com/story/guide-net-neutrality/ </li>\n                <li>GNU Project. Categories of free and nonfree software. February 2019. https://www.gnu.org/philosophy/categories.html </li>\n                <li>Stallman, Richard. Why Open Source misses the point of Free Software. January 2020. https://www.gnu.org/philosophy/open-source-misses-the-point.en.html </li>\n            </ul>\n        </div>)\n    }\n}\n\nexport default ABOUT","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport NN from './NN';\nimport FLOSS from './FLOSS';\nimport ABOUT from './ABOUT';\nimport { Typography } from '@material-ui/core';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function SimpleTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root} style={{backgroundColor:'rgb(24,26,27)'}}>\n      <AppBar position=\"static\">\n      <Typography style={{textAlign:\"center\"}} variant='h4'>Freedom of Software and Internet Access</Typography>\n\n        <Tabs value={value} onChange={handleChange}  style={{marginTop: '-=15px'}} aria-label=\"simple tabs example\" centered>\n\n          <Tab label=\"Net Neutrality\" {...a11yProps(0)} />\n          <Tab label=\"Free And Open Source Software\" {...a11yProps(1)} />\n          <Tab label=\"About\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <NN/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <FLOSS/>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <ABOUT/>\n      </TabPanel>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App style={{backgroundColor:'rgb(24,26,27)'}}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}